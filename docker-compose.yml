services:
  load-balancer:
    container_name: load-balancer
    hostname: load-balancer
    build: ./infra/load-balancer
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - dnevnik-app-01
    networks:
      - appnet

  dnevnik-app-01:
    # restart: on-failure
    container_name: dnevnik-app-01
    hostname: dnevnik-app-01
    image: library/node:lts-alpine
    depends_on:
      - postgresdb
    working_dir: /app
    volumes:
      - ./:/app
    command: sh -c "npm ci && npm run disable-telemetry && npm run build && npm run migrate-apply && npm start"
    networks:
      - appnet
  
  postgresdb:
    container_name: dnevnik-postgresdb
    hostname: postgresdb
    image: postgres
    environment:
      POSTGRES_DB: main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - appnet
    # do not need to open ports on prod
    # ports:
    #   - "5432:5432"

volumes:
  pgdata:
    driver: local

networks:
  appnet:
    driver: bridge
